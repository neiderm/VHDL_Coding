-- This file was generated with hex2rom written by Daniel Wallner

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity img_rom is
	port(
		Clk	: in std_logic;
		A	: in std_logic_vector(8 downto 0);
		D	: out std_logic_vector(15 downto 0)
	);
end img_rom;

architecture rtl of img_rom is
	signal A_r : std_logic_vector(8 downto 0);
begin
	process (Clk)
	begin
		if Clk'event and Clk = '1' then
			A_r <= A;
		end if;
	end process;
	process (A_r)
	begin
		case to_integer(unsigned(A_r)) is
		when 000000 => D <= "0100110101000010";	-- 0x0000
		when 000001 => D <= "0000000100000110";	-- 0x0002
		when 000002 => D <= "0000000000000000";	-- 0x0004
		when 000003 => D <= "0000000000000000";	-- 0x0006
		when 000004 => D <= "0000000000000000";	-- 0x0008
		when 000005 => D <= "0000000001000110";	-- 0x000A
		when 000006 => D <= "0000000000000000";	-- 0x000C
		when 000007 => D <= "0000000000111000";	-- 0x000E
		when 000008 => D <= "0000000000000000";	-- 0x0010
		when 000009 => D <= "0000000000001000";	-- 0x0012
		when 000010 => D <= "0000000000000000";	-- 0x0014
		when 000011 => D <= "0000000000001100";	-- 0x0016
		when 000012 => D <= "0000000000000000";	-- 0x0018
		when 000013 => D <= "0000000000000001";	-- 0x001A
		when 000014 => D <= "0000000000010000";	-- 0x001C
		when 000015 => D <= "0000000000000011";	-- 0x001E
		when 000016 => D <= "0000000000000000";	-- 0x0020
		when 000017 => D <= "0000000011000000";	-- 0x0022
		when 000018 => D <= "0000000000000000";	-- 0x0024
		when 000019 => D <= "0010111000100011";	-- 0x0026
		when 000020 => D <= "0000000000000000";	-- 0x0028
		when 000021 => D <= "0010111000100011";	-- 0x002A
		when 000022 => D <= "0000000000000000";	-- 0x002C
		when 000023 => D <= "0000000000000000";	-- 0x002E
		when 000024 => D <= "0000000000000000";	-- 0x0030
		when 000025 => D <= "0000000000000000";	-- 0x0032
		when 000026 => D <= "0000000000000000";	-- 0x0034
		when 000027 => D <= "0111110000000000";	-- 0x0036
		when 000028 => D <= "0000000000000000";	-- 0x0038
		when 000029 => D <= "0000001111100000";	-- 0x003A
		when 000030 => D <= "0000000000000000";	-- 0x003C
		when 000031 => D <= "0000000000011111";	-- 0x003E
		when 000032 => D <= "0000000000000000";	-- 0x0040
		when 000033 => D <= "1000000000000000";	-- 0x0042
		when 000034 => D <= "0000000000000000";	-- 0x0044
		when 000035 => D <= "1000000000011111";	-- 0x0046 -- start
		when 000036 => D <= "1000000000011111";	-- 0x0048
		when 000037 => D <= "1111111111111111";	-- 0x004A
		when 000038 => D <= "1111111111111111";	-- 0x004C
		when 000039 => D <= "1111110000000000";	-- 0x004E
		when 000040 => D <= "1111110000000000";	-- 0x0050
		when 000041 => D <= "1000001111100000";	-- 0x0052
		when 000042 => D <= "1000001111100000";	-- 0x0054
		when 000043 => D <= "1000000000011111";	-- 0x0056
		when 000044 => D <= "1000000000011111";	-- 0x0058
		when 000045 => D <= "1111111111111111";	-- 0x005A
		when 000046 => D <= "1111111111111111";	-- 0x005C
		when 000047 => D <= "1111110000000000";	-- 0x005E
		when 000048 => D <= "1111110000000000";	-- 0x0060
		when 000049 => D <= "1000001111100000";	-- 0x0062
		when 000050 => D <= "1000001111100000";	-- 0x0064
		when 000051 => D <= "1000000000011111";	-- 0x0066
		when 000052 => D <= "1000000000011111";	-- 0x0068
		when 000053 => D <= "1111111111111111";	-- 0x006A
		when 000054 => D <= "1111111111111111";	-- 0x006C
		when 000055 => D <= "1111110000000000";	-- 0x006E
		when 000056 => D <= "1111110000000000";	-- 0x0070
		when 000057 => D <= "1000001111100000";	-- 0x0072
		when 000058 => D <= "1000001111100000";	-- 0x0074
		when 000059 => D <= "1000000000011111";	-- 0x0076
		when 000060 => D <= "1000000000011111";	-- 0x0078
		when 000061 => D <= "1111111111111111";	-- 0x007A
		when 000062 => D <= "1111111111111111";	-- 0x007C
		when 000063 => D <= "1111110000000000";	-- 0x007E
		when 000064 => D <= "1111110000000000";	-- 0x0080
		when 000065 => D <= "1000001111100000";	-- 0x0082
		when 000066 => D <= "1000001111100000";	-- 0x0084
		when 000067 => D <= "1111111111111111";	-- 0x0086
		when 000068 => D <= "1111111111111111";	-- 0x0088
		when 000069 => D <= "1111110000000000";	-- 0x008A
		when 000070 => D <= "1111110000000000";	-- 0x008C
		when 000071 => D <= "1000001111100000";	-- 0x008E
		when 000072 => D <= "1000001111100000";	-- 0x0090
		when 000073 => D <= "1000000000011111";	-- 0x0092
		when 000074 => D <= "1000000000011111";	-- 0x0094
		when 000075 => D <= "1111111111111111";	-- 0x0096
		when 000076 => D <= "1111111111111111";	-- 0x0098
		when 000077 => D <= "1111110000000000";	-- 0x009A
		when 000078 => D <= "1111110000000000";	-- 0x009C
		when 000079 => D <= "1000001111100000";	-- 0x009E
		when 000080 => D <= "1000001111100000";	-- 0x00A0
		when 000081 => D <= "1000000000011111";	-- 0x00A2
		when 000082 => D <= "1000000000011111";	-- 0x00A4
		when 000083 => D <= "1111111111111111";	-- 0x00A6
		when 000084 => D <= "1111111111111111";	-- 0x00A8
		when 000085 => D <= "1111110000000000";	-- 0x00AA
		when 000086 => D <= "1111110000000000";	-- 0x00AC
		when 000087 => D <= "1000001111100000";	-- 0x00AE
		when 000088 => D <= "1000001111100000";	-- 0x00B0
		when 000089 => D <= "1000000000011111";	-- 0x00B2
		when 000090 => D <= "1000000000011111";	-- 0x00B4
		when 000091 => D <= "1111111111111111";	-- 0x00B6
		when 000092 => D <= "1111111111111111";	-- 0x00B8
		when 000093 => D <= "1111110000000000";	-- 0x00BA
		when 000094 => D <= "1111110000000000";	-- 0x00BC
		when 000095 => D <= "1000001111100000";	-- 0x00BE
		when 000096 => D <= "1000001111100000";	-- 0x00C0
		when 000097 => D <= "1000000000011111";	-- 0x00C2
		when 000098 => D <= "1000000000011111";	-- 0x00C4
		when 000099 => D <= "1111110000000000";	-- 0x00C6
		when 000100 => D <= "1111110000000000";	-- 0x00C8
		when 000101 => D <= "1000001111100000";	-- 0x00CA
		when 000102 => D <= "1000001111100000";	-- 0x00CC
		when 000103 => D <= "1000000000011111";	-- 0x00CE
		when 000104 => D <= "1000000000011111";	-- 0x00D0
		when 000105 => D <= "1111111111111111";	-- 0x00D2
		when 000106 => D <= "1111111111111111";	-- 0x00D4
		when 000107 => D <= "1111110000000000";	-- 0x00D6
		when 000108 => D <= "1111110000000000";	-- 0x00D8
		when 000109 => D <= "1000001111100000";	-- 0x00DA
		when 000110 => D <= "1000001111100000";	-- 0x00DC
		when 000111 => D <= "1000000000011111";	-- 0x00DE
		when 000112 => D <= "1000000000011111";	-- 0x00E0
		when 000113 => D <= "1111111111111111";	-- 0x00E2
		when 000114 => D <= "1111111111111111";	-- 0x00E4
		when 000115 => D <= "1111110000000000";	-- 0x00E6
		when 000116 => D <= "1111110000000000";	-- 0x00E8
		when 000117 => D <= "1000001111100000";	-- 0x00EA
		when 000118 => D <= "1000001111100000";	-- 0x00EC
		when 000119 => D <= "1000000000011111";	-- 0x00EE
		when 000120 => D <= "1000000000011111";	-- 0x00F0
		when 000121 => D <= "1111111111111111";	-- 0x00F2
		when 000122 => D <= "1111111111111111";	-- 0x00F4
		when 000123 => D <= "1111110000000000";	-- 0x00F6
		when 000124 => D <= "1111110000000000";	-- 0x00F8
		when 000125 => D <= "1000001111100000";	-- 0x00FA
		when 000126 => D <= "1000001111100000";	-- 0x00FC
		when 000127 => D <= "1000000000011111";	-- 0x00FE
		when 000128 => D <= "1000000000011111";	-- 0x0100
		when 000129 => D <= "1111111111111111";	-- 0x0102
		when 000130 => D <= "1111111111111111";	-- 0x0104
		when others => D <= "----------------";
		end case;
	end process;
end;
